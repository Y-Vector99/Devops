# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Build & Test Docker Image
      - name: Build Docker image
        run: docker build -t app .
        
      # Check if the build succeeded
      - name: Check Build Status
        if: ${{ success() }}
        run: exit 0
      # If the build failed, exit with a non-zero code
      - name: Fail Build
        run: exit 1
      
      
      # Configure Git
      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      
      # Authenticate with GitHub token
      - name: Authenticate with GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
      
      # Create a Tag
      - name: Create Tag
        id: create_tag
        run: |
          TAG_NAME="v$(date +'%Y%m%d%H%M%S')"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT
          git tag $TAG_NAME
          git push origin $TAG_NAME

      # Create a GitHub Release
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.TAG_NAME }}
          release_name: Release ${{ steps.create_tag.outputs.TAG_NAME }}
          body: |
            ## Changes
            - Description of changes in this release
          draft: false
          prerelease: false
      
